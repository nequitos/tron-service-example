services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ".:/usr/tron-service-example"
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
    network_mode: host
#    command: ["fastapi", "run", "app.py", "--proxy-headers", "--host", "localhost", "--port", "80"]
    command: >
      /bin/sh -c 'python init_db.py && uvicorn src.app:app'

  db:
    image: postgres:16.8-bullseye
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - PGDATA=/var/lib/postgresql/data/db-files/
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: sh -c "pg_isready -U ${POSTGRES_USER} -h localhost"
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - custom
    volumes:
      - tron-service-example:/var/lib/postgresql/data
volumes:
  tron-service-example:
networks:
  custom:
    driver: bridge